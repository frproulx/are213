source('ps2a.r')
head(ps2a.data)
summary(ps2a.data)
ps2a.datakey <- data.frame(var.name=names(ps2a.data), var.labels = attr(ps2a.data, "var.labels"))

ps2a.datakey
pooled.OLS <- lm(ln(fatalities) ~ primary, data = ps2a.data)

pooled.OLS <- lm(log(fatalities) ~ primary, data = ps2a.data)

summary(pooled.OLS)
ps2a.data$logfatal <- with(ps2.data, log(fatalities))
ps2a.data$logfatal <- with(ps2a.data, log(fatalities))
head(ps2a.data)
ps2a.data$logfatalpc <- with(ps2a.data, log(fatalities/population))
ps2a.data$netyears <- with(ps2a.data, year-1981)
pooled.OLS <- lm(logfatalpc ~ primary, data = ps2a.data)

quadtime <- lm(logfatalpc ~ primary + (netyears^2))
quadtime <- lm(logfatalpc ~ primary + (netyears^2), data = ps2a.data)
summary(quadtime)
ps2a.data$sqnetyears <- with(ps2a.data, (year-1981)^2)
quadtime <- lm(logfatalpc ~ primary + sqnetyears, data = ps2a.data)
summary(quadtime)
summary(pooled.OLS)
names(ps2a.data)
pooled.full <- lm(logfatalpc ~ primary + secondary + beer + totalvmt + precip + snow32 + rural_speed + urban_speed, data = ps2a.data)
summary(pooled.full)
ps2a.datakey
source("../util/are213-func.R")
robust(pooled.OLS)
summary(pooled.OLS)
source('ps2a-paworking.r')
cluster
clus
colnames(clus)
head(clus)
clus <- cbind(X, "state"=ps2a.data[,cluster], "resid" = resid(pooled.full))
head(clus)
cluster <- "state"
clus <- cbind(X, "state"=ps2a.data[,cluster], "resid" = resid(pooled.full))
                                        #number of clusters
m <- dim(table(clus[,cluster]))
k <- dim(X)[2]

uj <- matrix(NA, nrow=m, ncol = k)
gs <- names(table(ps2a.data[,cluster]))
for (i in 1:m){
    uj[i,] <- t(matrix(clus[clus[,cluster]==gs[i], k+2])) %*% clus[clus[,cluster]==gs[i], 1:k]
}

XDX <- 0
for(i in 1:nrow(X)) {
    XDX <- XDX +X[i,] %*% (t(uj) %*% uj)  %*%t (X[i,])
}

                                        #Compute variance/covariance matrix
varcovar <- XX1 %*% XDX %*% XX1

                                        # Degrees of freedom adjustment
dfc <- (sqrt(m)/sqrt(m-1))* sqrt(nrow(X)-1)/sqrt(nrow(X)-ncol(X))

stdh <- dfc*sqrt(diag(varcovar))

t <- pooled.full$coefficients/stdh
p <- 2*pnorm(-abs(t))
results.cluster <- cbind(pooled.full$coefficients, stdh, t, p)
dimnames(results.cluster) <- dimnames(s$coefficients)
results.cluster

XDX <- t(X) %*% (t(uj) %*$ uj) %*% X
XDX <- t(X) %*% (t(uj) %*% uj) %*% X
XDX <- 0
for(i in 1:nrow(X)) {
    XDX <- XDX + diag((t(uj) %*% uj))[i,] * X[i,]  %*%t (X[i,])
}

t(uj)
t(uj) %*% uj
diag(t(uj) %*% uj)
m
nrow(X)
nrow(uj)
49*12
ncol(X)
XDX
for(i in 1:nrow(X)) {
    XDX <- XDX + diag((t(uj) %*% uj))[i] * X[i,]  %*%t (X[i,])
}

XDX
head(uj)
nrow(uj)
source('ps2a-paworking.r')
source('ps2a-paworking.r')
 results.robust
results.cluster
pooled.full
summary(pooled.full)
head(XDX)
diag((t(uj) %*% uj))
cluster <- "state"
clus <- cbind(X, "state"=ps2a.data[,cluster], "resid" = resid(pooled.full))
                                        #number of clusters
m <- dim(table(clus[,cluster]))
k <- dim(X)[2]

uj <- matrix(NA, nrow=m, ncol = k)
gs <- names(table(ps2a.data[,cluster]))
for (i in 1:m){
    uj[i,] <- t(matrix(clus[clus[,cluster]==gs[i], k+2])) %*% clus[clus[,cluster]==gs[i], 1:k]
}

for(i in 1:nrow(X)) {
    XDX <- XDX + diag((t(uj) %*% uj))[i] * X[i,]  %*% t(X[i,])
}

                                        #Compute variance/covariance matrix
varcovar <- XX1 %*% XDX %*% XX1

                                        # Degrees of freedom adjustment
dfc <- (sqrt(m)/sqrt(m-1))* sqrt(nrow(X)-1)/sqrt(nrow(X)-ncol(X))

stdh <- dfc*sqrt(diag(varcovar))

t <- pooled.full$coefficients/stdh
p <- 2*pnorm(-abs(t))
results.cluster <- cbind(pooled.full$coefficients, stdh, t, p)
dimnames(results.cluster) <- dimnames(s$coefficients)
results.cluster

cluster <- "state"
clus <- cbind(X, "state"=ps2a.data[,cluster], "resid" = resid(pooled.full))
                                        #number of clusters
m <- dim(table(clus[,cluster]))
k <- dim(X)[2]

uj <- matrix(NA, nrow=m, ncol = k)
gs <- names(table(ps2a.data[,cluster]))
for (i in 1:m){
    uj[i,] <- t(matrix(clus[clus[,cluster]==gs[i], k+2])) %*% clus[clus[,cluster]==gs[i], 1:k]
}

XDX <- 0
for(i in 1:nrow(X)) {
    XDX <- XDX + diag((t(uj) %*% uj))[i] * X[i,]  %*% t(X[i,])
}

                                        #Compute variance/covariance matrix
varcovar <- XX1 %*% XDX %*% XX1

                                        # Degrees of freedom adjustment
dfc <- (sqrt(m)/sqrt(m-1))* sqrt(nrow(X)-1)/sqrt(nrow(X)-ncol(X))

stdh <- dfc*sqrt(diag(varcovar))

t <- pooled.full$coefficients/stdh
p <- 2*pnorm(-abs(t))
results.cluster <- cbind(pooled.full$coefficients, stdh, t, p)
dimnames(results.cluster) <- dimnames(s$coefficients)
results.cluster

X[i, ] %*% t(X[i,])
nrow(X)
X[1} %*% t(X[i,])
X[1,]%*% t(X[1,])
u2
gs
for (i in 1:m){
    uj[i,] <- t(matrix(clus[clus[,cluster]==gs[i], resid])) %*% clus[clus[,cluster]==gs[i], 1:k]
}

for (i in 1:m){
    uj[i,] <- t(matrix(clus[clus[,cluster]==gs[i], 'resid'])) %*% clus[clus[,cluster]==gs[i], 1:k]
}

head(uj)
nrow(uj)
ncol(uj)
cluster <- "state"
clus <- cbind(X, "state"=ps2a.data[,cluster], "resid" = resid(pooled.full))
                                        #number of clusters
m <- dim(table(clus[,cluster]))
k <- dim(X)[2]

uj <- matrix(NA, nrow=m, ncol = k)
gs <- names(table(ps2a.data[,cluster]))
for (i in 1:m){
    uj[i,] <- t(matrix(clus[clus[,cluster]==gs[i], 'resid'])) %*% clus[clus[,cluster]==gs[i], 1:k]
}

XDX <- 0
for(i in 1:nrow(X)) {
    XDX <- XDX + diag((t(uj) %*% uj)) * X[i,]  %*% t(X[i,])
}

                                        #Compute variance/covariance matrix
varcovar <- XX1 %*% XDX %*% XX1

                                        # Degrees of freedom adjustment
dfc <- (sqrt(m)/sqrt(m-1))* sqrt(nrow(X)-1)/sqrt(nrow(X)-ncol(X))

stdh <- dfc*sqrt(diag(varcovar))

t <- pooled.full$coefficients/stdh
p <- 2*pnorm(-abs(t))
results.cluster <- cbind(pooled.full$coefficients, stdh, t, p)
dimnames(results.cluster) <- dimnames(s$coefficients)
results.cluster

stargazer(a.typ.full, results.robust, results.full, 
          title = "Comparison of Standard Error HC Methods for Full Pooled Model, as calculated by hand",
          style = "qje",
          out = 'p3b2.tex',
          font.size = "footnotesize", 
          column.labels = c("Conventional", "HC1 Robust", "HC1 Robust + Cluster"),
          label="tab:3b2"
          )

stargazer(a.typ.full, results.robust, results.cluster, 
          title = "Comparison of Standard Error HC Methods for Full Pooled Model, as calculated by hand",
          style = "qje",
          out = 'p3b2.tex',
          font.size = "footnotesize", 
          column.labels = c("Conventional", "HC1 Robust", "HC1 Robust + Cluster"),
          label="tab:3b2"
          )

a.typ.full
results.robust
head(a.typ.full)
colnames(a.typ.full)
a.typ.full$Std.\ Error
a.typ.full[2]
a.typ.full[,2]
hand.comparison <- cbind(a.typ.full[,2], results.robust[,2], results.cluster[,2])
head(hand.comparison)
results.robust
results.cluster
hand.comparison
cluster <- "state"
clus <- cbind(X, "state"=ps2a.data[,cluster], "resid" = resid(pooled.full))
                                        #number of clusters
m <- dim(table(clus[,cluster]))
k <- dim(X)[2]

uj <- matrix(NA, nrow=m, ncol = k)
gs <- names(table(ps2a.data[,cluster]))
for (i in 1:m){
    uj[i,] <- t(matrix(clus[clus[,cluster]==gs[i], 'resid'])) %*% clus[clus[,cluster]==gs[i], 1:k]
}

XDX <- 0
for(i in 1:nrow(X)) {
    XDX <- XDX + diag((t(uj) %*% uj)) * X[i,]  %*% t(X[i,])
}

                                        #Compute variance/covariance matrix
varcovar <- XX1 %*% XDX %*% XX1

                                        # Degrees of freedom adjustment
dfc <- (m/(m-1)) * (nrow(X)-1)/(nrow(X)-ncol(X))

stdh <- dfc*sqrt(diag(varcovar))

t <- pooled.full$coefficients/stdh
p <- 2*pnorm(-abs(t))
results.cluster <- cbind(pooled.full$coefficients, stdh, t, p)
dimnames(results.cluster) <- dimnames(s$coefficients)
results.cluster

hand.comparison <- cbind(a.typ.full[,2], results.robust[,2], results.cluster[,2])

hand.comparison
cluster <- "state"
clus <- cbind(X, "state"=ps2a.data[,cluster], "resid" = resid(pooled.full))
                                        #number of clusters
m <- dim(table(clus[,cluster]))
k <- dim(X)[2]

uj <- matrix(NA, nrow=m, ncol = k)
gs <- names(table(ps2a.data[,cluster]))
for (i in 1:m){
    uj[i,] <- t(matrix(clus[clus[,cluster]==gs[i], 'resid'])) %*% clus[clus[,cluster]==gs[i], 1:k]
}

XDX <- 0
for(i in 1:nrow(X)) {
    XDX <- XDX + diag((t(uj) %*% uj)) * t(X[i,])  %*% X[i,]
}

                                        #Compute variance/covariance matrix
varcovar <- XX1 %*% XDX %*% XX1

                                        # Degrees of freedom adjustment
dfc <- (m/(m-1)) * (nrow(X)-1)/(nrow(X)-ncol(X))

stdh <- dfc*sqrt(diag(varcovar))

t <- pooled.full$coefficients/stdh
p <- 2*pnorm(-abs(t))
results.cluster <- cbind(pooled.full$coefficients, stdh, t, p)
dimnames(results.cluster) <- dimnames(s$coefficients)
results.cluster

hand.comparison <- cbind(a.typ.full[,2], results.robust[,2], results.cluster[,2])

hand.comparison
varcovar
nrow(X)
ncol(X)
nrow(uj)
cluster <- "state"
clus <- cbind(X, "state"=ps2a.data[,cluster], "resid" = resid(pooled.full))
                                        #number of clusters
m <- dim(table(clus[,cluster]))
k <- dim(X)[2]

uj <- matrix(NA, nrow=m, ncol = k)
gs <- names(table(ps2a.data[,cluster]))
for (i in 1:m){
    uj[i,] <- t(matrix(clus[clus[,cluster]==gs[i], 'resid'])) %*% clus[clus[,cluster]==gs[i], 1:k]
}

XDX <- X %*% diag(t(uj) %*% uj) %*% t(X)
## for(i in 1:nrow(X)) {
##    XDX <- XDX + diag((t(uj) %*% uj))[i] * X[i,]  %*% t(X[i,])
## }

                                        #Compute variance/covariance matrix
varcovar <- XX1 %*% XDX %*% XX1

                                        # Degrees of freedom adjustment
dfc <- sqrt((m/(m-1)) * (nrow(X)-1)/(nrow(X)-ncol(X)))

stdh <- dfc*sqrt(diag(varcovar))

t <- pooled.full$coefficients/stdh
p <- 2*pnorm(-abs(t))
results.cluster <- cbind(pooled.full$coefficients, stdh, t, p)
dimnames(results.cluster) <- dimnames(s$coefficients)
results.cluster

hand.comparison <- cbind(a.typ.full[,2], results.robust[,2], results.cluster[,2])

nrow(t(X)
)
nrow(diag(t(uj) %*% uj))
t(uj) %*% uj
cluster <- "state"
clus <- cbind(X, "state"=ps2a.data[,cluster], "resid" = resid(pooled.full))
                                        #number of clusters
m <- dim(table(clus[,cluster]))
k <- dim(X)[2]

uj <- matrix(NA, nrow=m, ncol = k)
gs <- names(table(ps2a.data[,cluster]))
for (i in 1:m){
    uj[i,] <- t(matrix(clus[clus[,cluster]==gs[i], 'resid'])) %*% clus[clus[,cluster]==gs[i], 1:k]
}

XDX <- X %*% (t(uj) %*% uj) %*% t(X)
## for(i in 1:nrow(X)) {
##    XDX <- XDX + diag((t(uj) %*% uj))[i] * X[i,]  %*% t(X[i,])
## }

                                        #Compute variance/covariance matrix
varcovar <- XX1 %*% XDX %*% XX1

                                        # Degrees of freedom adjustment
dfc <- sqrt((m/(m-1)) * (nrow(X)-1)/(nrow(X)-ncol(X)))

stdh <- dfc*sqrt(diag(varcovar))

t <- pooled.full$coefficients/stdh
p <- 2*pnorm(-abs(t))
results.cluster <- cbind(pooled.full$coefficients, stdh, t, p)
dimnames(results.cluster) <- dimnames(s$coefficients)
results.cluster

hand.comparison <- cbind(a.typ.full[,2], results.robust[,2], results.cluster[,2])

nrow(XDX)
ncol(XX1)
ncol(XDX)
cluster <- "state"
clus <- cbind(X, "state"=ps2a.data[,cluster], "resid" = resid(pooled.full))
                                        #number of clusters
m <- dim(table(clus[,cluster]))
k <- dim(X)[2]

uj <- matrix(NA, nrow=m, ncol = k)
gs <- names(table(ps2a.data[,cluster]))
for (i in 1:m){
    uj[i,] <- t(matrix(clus[clus[,cluster]==gs[i], 'resid'])) %*% clus[clus[,cluster]==gs[i], 1:k]
}

XDX <- t(X) %*% diag(diag((t(uj) %*% uj))) %*% X
## for(i in 1:nrow(X)) {
##    XDX <- XDX + diag((t(uj) %*% uj))[i] * X[i,]  %*% t(X[i,])
## }

                                        #Compute variance/covariance matrix
varcovar <- XX1 %*% XDX %*% XX1

                                        # Degrees of freedom adjustment
dfc <- sqrt((m/(m-1)) * (nrow(X)-1)/(nrow(X)-ncol(X)))

stdh <- dfc*sqrt(diag(varcovar))

t <- pooled.full$coefficients/stdh
p <- 2*pnorm(-abs(t))
results.cluster <- cbind(pooled.full$coefficients, stdh, t, p)
dimnames(results.cluster) <- dimnames(s$coefficients)
results.cluster

hand.comparison <- cbind(a.typ.full[,2], results.robust[,2], results.cluster[,2])

nrow(t(X))
ncol(t(X))
nrow(uj)
ncol(uj)
nrow(XX1)
ncol(XX1)
nrow(X)
ncol(X)
nrow(uj)
ncol(uj)
cluster <- "state"
clus <- cbind(X, "state"=ps2a.data[,cluster], "resid" = resid(pooled.full))
                                        #number of clusters
m <- dim(table(clus[,cluster]))
k <- dim(X)[2]

uj <- matrix(NA, nrow=m, ncol = k)
gs <- names(table(ps2a.data[,cluster]))
for (i in 1:m){
    uj[i,] <- t(matrix(clus[clus[,cluster]==gs[i], 'resid'])) %*% clus[clus[,cluster]==gs[i], 1:k]
}


                                        #Compute variance/covariance matrix
varcovar <- XX1 %*% crossprod(uj) %*% XX1

                                        # Degrees of freedom adjustment
dfc <- sqrt((m/(m-1)) * (nrow(X)-1)/(nrow(X)-ncol(X)))

stdh <- dfc*sqrt(diag(varcovar))

t <- pooled.full$coefficients/stdh
p <- 2*pnorm(-abs(t))
results.cluster <- cbind(pooled.full$coefficients, stdh, t, p)
dimnames(results.cluster) <- dimnames(s$coefficients)
results.cluster

hand.comparison <- cbind(a.typ.full[,2], results.robust[,2], results.cluster[,2])

hand.comparison
hand.comparison <- cbind(a.typ.full[,2], results.robust[,2], results.cluster[,2])

colnames(hand.comparison) <- c("Conventional", "Robust", "Clustered")
stargazer(hand.comparison,
          summary = TRUE,
          title = "Comparison of Standard Error HC Methods for Full Pooled Model, as calculated by hand",
          style = "qje",
          out = 'p3b2.tex',
          font.size = "footnotesize", 
          column.labels = c("Conventional", "HC1 Robust", "HC1 Robust + Cluster"),
          label="tab:3b2"
          )
summary(hand.comparison)

stargazer(hand.comparison,
          title = "Comparison of Standard Error HC Methods for Full Pooled Model, as calculated by hand",
          style = "qje",
          out = 'p3b2.tex',
          font.size = "footnotesize", 
          column.labels = c("Conventional", "HC1 Robust", "HC1 Robust + Cluster"),
          label="tab:3b2"
          )

data.frame(hand.comparison)
stargazer(data.frame(hand.comparison),
          title = "Comparison of Standard Error HC Methods for Full Pooled Model, as calculated by hand",
          style = "qje",
          out = 'p3b2.tex',
          font.size = "footnotesize", 
          column.labels = c("Conventional", "HC1 Robust", "HC1 Robust + Cluster"),
          label="tab:3b2"
          )

data.frame(hand.comparison)
stargazer(data.frame(hand.comparison),
          summary = FALSE,
          title = "Comparison of Standard Error HC Methods for Full Pooled Model, as calculated by hand",
          style = "qje",
          out = 'p3b2.tex',
          font.size = "footnotesize", 
          column.labels = c("Conventional", "HC1 Robust", "HC1 Robust + Cluster"),
          label="tab:3b2"
          )

source('ps2a-paworking.r')
pdf(file="allstates.pdf", width = 7, height = 7.5)
ggplot(ps2a.data, aes(year, fatalities/population)) + 
  geom_point(aes(color=primary)) + 
  scale_x_continuous(breaks = c(1985, 1995)) +
  scale_y_continuous(breaks = c(0.2, 0.4)) +
  facet_wrap("state") + 
  ylab("log(fatalities) per capita") +
  ggtitle("State-level time series in log of fatalities per capita") +
  stat_smooth()
dev.off()

