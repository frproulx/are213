wsp <- lm(dbrwt ~ tobacco + ns(dmage, df=3) + dmar, data=ps1.data.clean)
wsp.int <- lm(dbrwt ~ tobacco * ns(dmage, df=3) * dmar, data=ps1.data.clean)
stargazer(wsp.ps1a, wsp, wsp.int, style="qje", no.space = TRUE, dep.var.labels = "Birth Weight")
# This is the ATE with a splines regression on Age
summary(effect("tobacco", wsp))
# This is the ATE with a complex, interacting splines regression on AGe
summary(effect("tobacco", wsp.int))
# Problem 2a --------
ps1.data.clean$tobacco.rescale <- with(ps1.data.clean, recode(tobacco, "2='0'", as.numeric.result=TRUE)) #rescales the tobacco use variable to be 0/1, where 0=no and 1 = yes
ps1.data.clean$dmar.rescale <- with(ps1.data.clean, recode(dmar, "2='0'"))
smoke.propensity.all <- glm(tobacco.rescale ~ as.factor(mrace3) + dmeduc + dmar.rescale + dfage + dfeduc + as.factor(orfath) + dplural + csex + dmage, data=ps1.data.clean, family = binomial()) ## Did I miss any predetermined covariates here? No.
smoke.propensity.reduced <- glm(tobacco.rescale ~ as.factor(mrace3) + dmeduc + dmar.rescale + dfage + dfeduc + as.factor(orfath), data=ps1.data.clean, family = binomial())
stargazer(smoke.propensity.all, smoke.propensity.reduced,
type = "latex",
covariate.labels = c("Mother's Race not White or Black", "Mother's Years of Education", "Marital status", "Father's age", "Father's Years of Education", "Father Mexican", "Father Puerto Rican", "Father Cuban", "Father Central or South American", "Father Race Other or Unknown Hispanic", "Plurality of Infant", "Sex of Infant", "Mother's age"),
style ="qje",
align = TRUE,
label = "tab:propensities",
title = "Logistic function coefficients for propensity score models",
dep.var.labels = "Mother Tobacco-Use Status",
no.spaces = TRUE,
out = "propensityscores.tex"
)
stargazer(smoke.propensity.all, smoke.propensity.reduced,
type = "latex",
covariate.labels = c("Mother's Race not White or Black", "Mother's Years of Education", "Marital status", "Father's age", "Father's Years of Education", "Father Mexican", "Father Puerto Rican", "Father Cuban", "Father Central or South American", "Father Race Other or Unknown Hispanic", "Plurality of Infant", "Sex of Infant", "Mother's age"),
style ="qje",
align = TRUE,
label = "tab:propensities",
title = "Logistic function coefficients for propensity score models",
dep.var.labels = "Mother Tobacco-Use Status",
out = "propensityscores.tex"
)
?stargazer
stargazer(smoke.propensity.all, smoke.propensity.reduced,
type = "latex",
covariate.labels = c("Mother's Race not White or Black", "Mother's Years of Education", "Marital status", "Father's age", "Father's Years of Education", "Father Mexican", "Father Puerto Rican", "Father Cuban", "Father Central or South American", "Father Race Other or Unknown Hispanic", "Plurality of Infant", "Sex of Infant", "Mother's age"),
style ="qje",
align = TRUE,
label = "tab:propensities",
title = "Logistic function coefficients for propensity score models",
dep.var.labels = "Mother Tobacco-Use Status",
no.space - TRUE
out = "propensityscores.tex"
)
stargazer(smoke.propensity.all, smoke.propensity.reduced,
type = "latex",
covariate.labels = c("Mother's Race not White or Black", "Mother's Years of Education", "Marital status", "Father's age", "Father's Years of Education", "Father Mexican", "Father Puerto Rican", "Father Cuban", "Father Central or South American", "Father Race Other or Unknown Hispanic", "Plurality of Infant", "Sex of Infant", "Mother's age"),
style ="qje",
align = TRUE,
label = "tab:propensities",
title = "Logistic function coefficients for propensity score models",
dep.var.labels = "Mother Tobacco-Use Status",
no.space - TRUE,
out = "propensityscores.tex"
)
stargazer(smoke.propensity.all, smoke.propensity.reduced,
type = "latex",
covariate.labels = c("Mother's Race not White or Black", "Mother's Years of Education", "Marital status", "Father's age", "Father's Years of Education", "Father Mexican", "Father Puerto Rican", "Father Cuban", "Father Central or South American", "Father Race Other or Unknown Hispanic", "Plurality of Infant", "Sex of Infant", "Mother's age"),
style ="qje",
align = TRUE,
label = "tab:propensities",
title = "Logistic function coefficients for propensity score models",
dep.var.labels = "Mother Tobacco-Use Status",
no.space = TRUE,
out = "propensityscores.tex"
)
stargazer(smoke.propensity.all, smoke.propensity.reduced,
type = "latex",
covariate.labels = c("Mother's Race not White or Black", "Mother's Years of Education", "Marital status", "Father's age", "Father's Years of Education", "Father Mexican", "Father Puerto Rican", "Father Cuban", "Father Central or South American", "Father Race Other or Unknown Hispanic", "Plurality of Infant", "Sex of Infant", "Mother's age"),
style ="qje",
align = TRUE,
label = "tab:propensities",
title = "Logistic function coefficients for propensity score models",
dep.var.labels = "Mother Tobacco-Use Status",
no.space = TRUE,
model.names = TRUE,
out = "propensityscores.tex"
)
ps1.data.clean$propensityfull <- predict(smoke.propensity.all, type = "response")
ps1.data.clean$propensityreduced <- predict(smoke.propensity.reduced, type = "response")
sm.propensityregression <- lm(dbrwt ~ propensityreduced * tobacco.rescale, ps1.data.clean)
#calculation of average treatment effect:
coefficients(sm.propensityregression)[2] + coefficients(sm.propensityregression)[4]*mean(ps1.data.clean$propensityreduced)
stargazer(sm.propensityregression,
type = "latex",
covariate.labels = c("Delta1", "Beta", "Delta2", "Constant"),
style ="qje",
align = TRUE,
font.size="footnotesize",
label = "tab:propensitymodel",
title = "Model of effects of tobacco use on birthweight using propensity score as a control",
dep.var.labels = "Mother Tobacco-Use Status",
out = "propensityscoremodel.tex"
)
h <- 30
kernel.epa <- function(u){
return(0.75*(1-u*u))}
kernel.epa(3)
kernel.epa(.2)
kernel.epa <- function(u){
if(abs(u)<1){return(0.75*(1-u*u))
}else{return(0)}
}
kernel.epa(0.3)
kernel.epa(3)
kernel.epa(-0.4)
propensity3000.sm <- with(ps1.data.clean, mean(propensityreduced[which(dbrwt == 3000 & tobacco.rescale == 1)]))
propensity3000.nosm <- with(ps1.data.clean, mean(propensityreduced[which(dbrwt == 3000 & tobacco.rescale == 0)]))
ps1.data.clean$tobacco.rescale.n <- as.numeric(levels(ps1.data.clean$tobacco.rescale))[ps1.data.clean$tobacco.rescale]
term1 <- with(ps1.data.clean, sum((tobacco.rescale.n*dbrwt)/propensityreduced)/sum(tobacco.rescale.n/propensityreduced))
term2 <- with(ps1.data.clean, sum(((1-tobacco.rescale.n)*dbrwt)/(1-propensityreduced))/sum((1-tobacco.rescale.n)/(1-propensityreduced)))
weightingestimator <- term1-term2 #This should be the average treatment effect
levels(ps1.data.clean$tobacco.rescale)
hist(ps1.data.clean$tobacco.rescale)
hist(ps1.data.clean$tobacco.rescale.n)
term1.T <- with(subset(ps1.data.clean, tobacco.rescale.n=1), sum((tobacco.rescale.n*dbrwt)/propensityreduced)/sum(tobacco.rescale.n/propensityreduced))
term2.T <- with(subset(ps1.data.clean, tobacco.rescale=1), sum(((1-tobacco.rescale)*dbrwt)/(1-propensityreduced))/sum((1-tobacco.rescale)/(1-propensityreduced)))
weightingestimator.T <- term1.T-term2.T This should be the average treatment on treated
weightingestimator.T <- term1.T-term2.T #This should be the average treatment on treated
term2.T <- with(subset(ps1.data.clean, tobacco.rescale.n=1), sum(((1-tobacco.rescale)*dbrwt)/(1-propensityreduced))/sum((1-tobacco.rescale)/(1-propensityreduced)))
term2.T <- with(subset(ps1.data.clean, tobacco.rescale.n=1), sum(((1-tobacco.rescale.n)*dbrwt)/(1-propensityreduced))/sum((1-tobacco.rescale.n)/(1-propensityreduced)))
term1.T <- with(subset(ps1.data.clean, tobacco.rescale.n==1), sum((tobacco.rescale.n*dbrwt)/propensityreduced)/sum(tobacco.rescale.n/propensityreduced))
term2.T <- with(subset(ps1.data.clean, tobacco.rescale.n==1), sum(((1-tobacco.rescale.n)*dbrwt)/(1-propensityreduced))/sum((1-tobacco.rescale.n)/(1-propensityreduced)))
propensityreduced
kerndensity.nosm <- with(subset(ps1.data.clean, tobacco.rescale == 0),
density(dbrwt, #if nobody smoked
kernel = "epanechnikov",
bw = h,
weights = propensityreduced/tot.propensity.nosm))
kerndensity.nosm.df <- data.frame(kerndensity.nosm[1], kerndensity.nosm[2])
tot.propensity.nosm <- with(subset(ps1.data.clean, tobacco.rescale == 0), sum(propensityreduced))
tot.propensity.sm <- with(subset(ps1.data.clean, tobacco.rescale == 1), sum(propensityreduced))
kerndensity.nosm <- with(subset(ps1.data.clean, tobacco.rescale == 0),
density(dbrwt, #if nobody smoked
kernel = "epanechnikov",
bw = h,
weights = propensityreduced/tot.propensity.nosm))
kerndensity.nosm.df <- data.frame(kerndensity.nosm[1], kerndensity.nosm[2])
names(kerndensity.nosm.df)
kerndensity.sm <- with(subset(ps1.data.clean, tobacco.rescale == 1),
density(dbrwt, #if everybody smoked
kernel = "epanechnikov",
bw = h,
weights = propensityreduced/tot.propensity.sm))
kerndensity.sm.df <- data.frame(kerndensity.sm[1], kerndensity.sm[2])
str(kerndensity.nosm)
kerndensity.nosm <- with(subset(ps1.data.clean, tobacco.rescale == 0),
density(dbrwt, #if nobody smoked
kernel = "epanechnikov",
bw = h,
weights = propensityreduced/tot.propensity.nosm))
kerndensity.nosm.df <- data.frame(birth.weight = kerndensity.nosm[1], non.smoke = kerndensity.nosm[2])
kerndensity.sm <- with(subset(ps1.data.clean, tobacco.rescale == 1),
density(dbrwt, #if everybody smoked
kernel = "epanechnikov",
bw = h,
weights = propensityreduced/tot.propensity.sm))
kerndensity.sm.df <- data.frame(birth.weight = kerndensity.sm[1], smoke = kerndensity.sm[2])
kdens <- join(kerndensity.sm, kerndensity.nosm)
kdens <- join(kerndensity.sm.df, kerndensity.nosm.df)
View(kerndensity.nosm.df)
kerndensity.nosm.df <- data.frame(birth.weight = kerndensity.nosm[1], non.smoke = kerndensity.nosm[2])
View(kerndensity.nosm.df)
kerndensity.nosm[1]
?data.frame
kerndensity.nosm.df <- as.data.frame(list(birth.weight = kerndensity.nosm[1], non.smoke = kerndensity.nosm[2]))
View(kerndensity.nosm.df)
kdens <- join(kerndensity.sm.df, kerndensity.nosm.df, by="x")
View(kdens)
kdens <- join(kerndensity.sm.df, kerndensity.nosm.df, by="x", type="full")
View(kdens)
test <- data.frame(bw = c(1:3), mw = c(4:6))
test
class(kerndensity.nosm[1])
kerndensity.nosm.df <- data.frame(birth.weight = as.numeric(kerndensity.nosm[1]), non.smoke = as.numeric(kerndensity.nosm[2])
kerndensity.nosm.df <- data.frame(birth.weight = as.numeric(kerndensity.nosm[1]), non.smoke = as.numeric(kerndensity.nosm[2]))
str(kerndensity.nosm[1])
kerndensity.nosm.df <- data.frame(birth.weight = kerndensity.nosm$x, non.smoke = kerndensity.nosm$y)
View(kerndensity.nosm.df)
kerndensity.nosm <- with(subset(ps1.data.clean, tobacco.rescale == 0),
density(dbrwt, #if nobody smoked
kernel = "epanechnikov",
bw = h,
weights = propensityreduced/tot.propensity.nosm))
kerndensity.nosm.df <- data.frame(birth.weight = kerndensity.nosm$x, non.smoke = kerndensity.nosm$y)
kerndensity.sm <- with(subset(ps1.data.clean, tobacco.rescale == 1),
density(dbrwt, #if everybody smoked
kernel = "epanechnikov",
bw = h,
weights = propensityreduced/tot.propensity.sm))
kerndensity.sm.df <- data.frame(birth.weight = kerndensity.sm$x, smoke = kerndensity.sm$y)
kdens <- join(kerndensity.sm.df, kerndensity.nosm.df, by="birth.weight", type = "full")
View(kdens)
kdens.m <- melt.data.frame(kdens, id.vars="birth.weight")
library(reshape)
kdens.m <- melt.data.frame(kdens, id.vars="birth.weight")
View(kdens.m)
View(kdens)
kdens.m <- melt.data.frame(kdens, id.vars="birth.weight", measure.vars = c("smoke", "non.smoke"), na.rm = TRUE)
View(kdens.m)
View(kdens.m)
kerndensity.plot <- ggplot(kdens.m, aes(birth.weight, value, factor(variable)))
kd.plot <- kd.plot +
geom_line(aes(color=variable)) +
labs(title = paste("Density of birthweights estimated using \n propensity score-weighted kernel regression \n Bandwidth=", as.factor(h)), x = "Birthweight (grams)", y = "Density")
kd.plot <- ggplot(kdens.m, aes(birth.weight, value, factor(variable)))
kd.plot <- kd.plot +
geom_line(aes(color=variable)) +
labs(title = paste("Density of birthweights estimated using \n propensity score-weighted kernel regression \n Bandwidth=", as.factor(h)), x = "Birthweight (grams)", y = "Density")
quartz()
kd.plot <- ggplot(kdens.m, aes(birth.weight, value, factor(variable)))
kd.plot <- kd.plot +
geom_line(aes(color=variable)) +
labs(title = paste("Density of birthweights estimated using \n propensity score-weighted kernel regression \n Bandwidth=", as.factor(h)), x = "Birthweight (grams)", y = "Density")
kd.plot
kd.plot <- kd.plot +
geom_line(aes(color=variable)) +
labs(title = paste("Density of birthweights estimated using \n propensity score-weighted kernel regression \n Bandwidth=", as.factor(h)), x = "Birthweight (grams)", y = "Density") +
theme_bw() +
guide_legend(title = "Treatment")
kd.plot <- kd.plot +
geom_line(aes(color=variable)) +
labs(title = paste("Density of birthweights estimated using \n propensity score-weighted kernel regression \n Bandwidth=", as.factor(h)), x = "Birthweight (grams)", y = "Density") +
theme_bw()
kd.plot <- kd.plot +
geom_line(aes(color=variable)) +
labs(title = paste("Density of birthweights estimated using \n propensity score-weighted kernel regression \n Bandwidth=", as.factor(h)), x = "Birthweight (grams)", y = "Density") +
theme_bw() +
guide_legend(title = "Treatment")
kd.plot + guide_legend()
?guide_legend
kd.plot <- kd.plot +
geom_line(aes(color=variable)) +
labs(title = paste("Density of birthweights estimated using \n propensity score-weighted kernel regression \n Bandwidth=", as.factor(h)), x = "Birthweight (grams)", y = "Density") +
guide_legend(title = "Treatment") +
theme_bw()
kd.plot <- kd.plot +
geom_line(aes(color=variable)) +
labs(title = paste("Density of birthweights estimated using \n propensity score-weighted kernel regression \n Bandwidth=", as.factor(h)), x = "Birthweight (grams)", y = "Density") +
guides(color = guide_legend(title = "Treatment")) +
theme_bw()
kd.plot
kd.plot.fn <- function(h){
kerndensity.nosm <- with(subset(ps1.data.clean, tobacco.rescale == 0),
density(dbrwt, #if nobody smoked
kernel = "epanechnikov",
bw = h,
weights = propensityreduced/tot.propensity.nosm))
kerndensity.nosm.df <- data.frame(birth.weight = kerndensity.nosm$x, non.smoke = kerndensity.nosm$y)
kerndensity.sm <- with(subset(ps1.data.clean, tobacco.rescale == 1),
density(dbrwt, #if everybody smoked
kernel = "epanechnikov",
bw = h,
weights = propensityreduced/tot.propensity.sm))
kerndensity.sm.df <- data.frame(birth.weight = kerndensity.sm$x, smoke = kerndensity.sm$y)
kdens <- join(kerndensity.sm.df, kerndensity.nosm.df, by="birth.weight", type = "full")
kdens.m <- melt.data.frame(kdens, id.vars="birth.weight", measure.vars = c("smoke", "non.smoke"), na.rm = TRUE)
kd.plot <- ggplot(kdens.m, aes(birth.weight, value, factor(variable)))
kd.plot <- kd.plot +
geom_line(aes(color=variable)) +
labs(title = paste("Density of birthweights estimated using \n propensity score-weighted kernel regression \n Bandwidth=", as.factor(h)), x = "Birthweight (grams)", y = "Density") +
guides(color = guide_legend(title = "Treatment")) +
theme_bw()
kd.plot
ggsave(width = 3, height = 3, file = paste0('img/kerndensity', h,'.pdf'), plot = kd.plot)
}
kd.plot.fn(30)
kd.plot.fn <- function(h){
kerndensity.nosm <- with(subset(ps1.data.clean, tobacco.rescale == 0),
density(dbrwt, #if nobody smoked
kernel = "epanechnikov",
bw = h,
weights = propensityreduced/tot.propensity.nosm))
kerndensity.nosm.df <- data.frame(birth.weight = kerndensity.nosm$x, non.smoke = kerndensity.nosm$y)
kerndensity.sm <- with(subset(ps1.data.clean, tobacco.rescale == 1),
density(dbrwt, #if everybody smoked
kernel = "epanechnikov",
bw = h,
weights = propensityreduced/tot.propensity.sm))
kerndensity.sm.df <- data.frame(birth.weight = kerndensity.sm$x, smoke = kerndensity.sm$y)
kdens <- join(kerndensity.sm.df, kerndensity.nosm.df, by="birth.weight", type = "full")
kdens.m <- melt.data.frame(kdens, id.vars="birth.weight", measure.vars = c("smoke", "non.smoke"), na.rm = TRUE)
kd.plot <- ggplot(kdens.m, aes(birth.weight, value, factor(variable)))
kd.plot <- kd.plot +
geom_line(aes(color=variable)) +
labs(title = paste("Density of birthweights estimated using \n propensity score-weighted kernel regression \n Bandwidth=", as.factor(h)), x = "Birthweight (grams)", y = "Density") +
guides(color = guide_legend(title = "Treatment")) +
theme_bw()
kd.plot
ggsave(width = 5, height = 3, file = paste0('img/kerndensity', h,'.pdf'), plot = kd.plot)
}
kd.plot.fn(30)
for(bw in seq(10,100,10)){kd.plot.fn(bw)}
kd.plot.fn <- function(h, plot.w = 5, plot.h = 3){
kerndensity.nosm <- with(subset(ps1.data.clean, tobacco.rescale == 0),
density(dbrwt, #if nobody smoked
kernel = "epanechnikov",
bw = h,
weights = propensityreduced/tot.propensity.nosm))
kerndensity.nosm.df <- data.frame(birth.weight = kerndensity.nosm$x, non.smoke = kerndensity.nosm$y)
kerndensity.sm <- with(subset(ps1.data.clean, tobacco.rescale == 1),
density(dbrwt, #if everybody smoked
kernel = "epanechnikov",
bw = h,
weights = propensityreduced/tot.propensity.sm))
kerndensity.sm.df <- data.frame(birth.weight = kerndensity.sm$x, smoke = kerndensity.sm$y)
kdens <- join(kerndensity.sm.df, kerndensity.nosm.df, by="birth.weight", type = "full")
kdens.m <- melt.data.frame(kdens, id.vars="birth.weight", measure.vars = c("smoke", "non.smoke"), na.rm = TRUE)
kd.plot <- ggplot(kdens.m, aes(birth.weight, value, factor(variable)))
kd.plot <- kd.plot +
geom_line(aes(color=variable)) +
labs(title = paste("Density of birthweights estimated using \n propensity score-weighted kernel regression \n Bandwidth=", as.factor(h)), x = "Birthweight (grams)", y = "Density") +
guides(color = guide_legend(title = "Treatment")) +
theme_bw()
kd.plot
ggsave(width = plot.w, height = plot.h, file = paste0('img/kerndensity', h,'.pdf'), plot = kd.plot)
}
for(bw in seq(10,100,10)){kd.plot.fn(bw)}
kd.plot.fn(40,6,4)
kd.plot.fn(40,7,4)
fix(vp.layout)
fix(arrange_ggplot2)
print(paste("The estimated average treatment effect using the reweighting approach is", round(weightingestimator, digits=0)))
print(paste("ATE is", round(tobacco.effects$fit[1] - tobacco.effects$fit[2], digits=0), "based on regression adjustment with p-score."))
print(paste("The Average Treatment Effect predicted by the blocking method with birthweight treated as a continuous variable is", round(blocksATE, digits=0)))
print(paste("The Average Treatment Effect predicted by the blocking method of birthweights falling into the 'low' category of less than 2500 grams is a probability of", round(blocks.lowbrwt.ATE, digits = 4),". That is, smokers are approximately", round(100*blocks.lowbrwt.ATE, digits = 0), "percent less more likely to have babies with weights less than 2500 grams."))
### Problem 3
## Using blocking estimator
# Divide smokers into ~100 equally spaced blocks
prop.max <- with(ps1.data.clean, max(propensityreduced))
prop.min <- with(ps1.data.clean, min(propensityreduced))
prop.binsize <- (prop.max - prop.min)/99
ps1.data.clean$blocknumber <- with(ps1.data.clean,
round(propensityreduced/prop.binsize, digits = 0) + 1)
blocktreatmenteffects <- ddply(ps1.data.clean, .(blocknumber), summarize, smokers = sum(tobacco.rescale == 1), nonsmokers = sum(tobacco.rescale == 0), smokerdbrwt = mean(dbrwt[tobacco.rescale == 1]), nonsmokerdbrwt = mean(dbrwt[tobacco.rescale == 0]))
blocktreatmenteffects$badbin <- with(blocktreatmenteffects, as.numeric(smokers == 0 | nonsmokers == 0))
cleaned.blocks <- subset(blocktreatmenteffects, badbin == 0)
cleaned.blocks$avgtreatmenteffect <- with(cleaned.blocks, smokerdbrwt - nonsmokerdbrwt)
cleaned.blocks$weight <- with(cleaned.blocks, (smokers + nonsmokers)/sum(smokers + nonsmokers))
cleaned.blocks$weightedTE <- with(cleaned.blocks, weight * avgtreatmenteffect)
blocksATE <- sum(cleaned.blocks$weightedTE)
### Problem 4
ps1.data.clean$lowbrwt <- as.numeric(ps1.data.clean$dbrwt < 2500)
blocklowbrwt <- ddply(ps1.data.clean, .(blocknumber), summarize, smokers = sum(tobacco.rescale == 1), nonsmokers = sum(tobacco.rescale == 0), lowbrwtprob.sm = mean(lowbrwt[tobacco.rescale == 1]), lowbrwtprob.nosm = mean(lowbrwt[tobacco.rescale == 0]))
blocklowbrwt$badbin <- with(blocklowbrwt, as.numeric(smokers == 0 | nonsmokers == 0))
cleaned.blocks.lowbrwt <- subset(blocklowbrwt, badbin == 0)
cleaned.blocks.lowbrwt$ATE <- with(cleaned.blocks.lowbrwt, lowbrwtprob.sm - lowbrwtprob.nosm)
cleaned.blocks.lowbrwt$weight <- with(cleaned.blocks.lowbrwt, (smokers + nonsmokers)/sum(smokers + nonsmokers))
cleaned.blocks.lowbrwt$weightedTE <- with(cleaned.blocks.lowbrwt, weight * ATE)
blocks.lowbrwt.ATE <- sum(cleaned.blocks.lowbrwt$weightedTE)
print(paste("The estimated average treatment effect using the reweighting approach is", round(weightingestimator, digits=0)))
print(paste("ATE is", round(tobacco.effects$fit[1] - tobacco.effects$fit[2], digits=0), "based on regression adjustment with p-score."))
print(paste("The Average Treatment Effect predicted by the blocking method with birthweight treated as a continuous variable is", round(blocksATE, digits=0)))
print(paste("The Average Treatment Effect predicted by the blocking method of birthweights falling into the 'low' category of less than 2500 grams is a probability of", round(blocks.lowbrwt.ATE, digits = 4),". That is, smokers are approximately", round(100*blocks.lowbrwt.ATE, digits = 0), "percent less more likely to have babies with weights less than 2500 grams."))
head(ps1.data.clean$lowbrwt)
as.numeric(TRUE)
as.numeric(FALSE)
getwd()
h <- 30
# added identity function to kernel (cuts off outside bw)
kernel.epa <- function(u){
if(abs(u)<1){return(0.75*(1-u*u))
}else{return(0)}
}
ps3k.sm <- with(ps1.data.clean, mean(propensityreduced[which(dbrwt == 3000 & tobacco.rescale == 1)]))
ps3k.ns <- with(ps1.data.clean, mean(propensityreduced[which(dbrwt == 3000 & tobacco.rescale == 0)]))
names(ps1.data.clean)
nonsmokelist <- with(ps1.data.clean(which(tobacco == 0)))
nonsmokelist <- with(ps1.data.clean, (which(tobacco == 0)))
nonsmokelist <- with(ps1.data.clean, (which(tobacco.rescale == 0)))
smokelist <- with(ps1.data.clean, (which(tobacco.rescale == 1)))
data.sm <- with(ps1.data.clean[smokelist,], data.frame(birth.weight = dbrwt, weight = 1/propensityreduced)
data.sm <- with(ps1.data.clean[smokelist,], data.frame(birth.weight = dbrwt, weight = 1/propensityreduced))
hist(data.sm$birth.weight)
hist(data.sm$weight)
data.ns <- with(ps1.data.clean[nonsmokelist,], data.frame(birth.weight = dbrwt, weight = 1/(1-propensityreduced)))
data <- data.sm
x = "birth.weight"
x-val <- 3000
x.val <- 3000
stargazer(wsp.ps1a, wsp, wsp.int, out = 'splineresults.tex', style="qje", label = 'tab:splineresults', no.space = TRUE, dep.var.labels = "Birth Weight")
# Frank's Directory
#setwd("/media/frank/Data/documents/school/berkeley/fall13/are213/are213/ps1")
# Peter's Directory
#setwd("~/Google Drive/ERG/Classes/ARE213/are213/ps1")
# Packages --------
library(foreign) #this is to read in Stata data
library(Hmisc)
library(psych)
library(stargazer)
library(ggplot2) # for neato plotting tools
library(plyr) # for nice data tools like ddply
library(epicalc) # For likelihood ratio test
library(car) # "companion for applied regression" - recode fxn, etc.
library(gmodels) #for Crosstabs
library(splines) # for series regression
library(np) #nonparametric regression
library(rms) #regression modeling tools
library(effects)
library(reshape)
stargazer(wsp.ps1a, wsp, wsp.int, out = 'splineresults.tex', style="qje", label = 'tab:splineresults', no.space = TRUE, dep.var.labels = "Birth Weight")
data$reweight <- data$weight / sum(data.weight)
data$reweight <- data$weight / sum(data$weight)
hist(data$reweight)
x.star <- with(data, mean(x))
x
bw.star <- with(data, mean(birth.weight))
for(i in 1:length(data.sm)){
data.ns$ksum <- kernel.epa((data.ns$birth.weight[i] - ps3k.sm) / h)
}
kernel.3000.sm <- sum(data.ns.ksum) / (length(data.ns$ksum) * h)
kernel.3000.sm <- sum(data.ns$ksum) / (length(data.ns$ksum) * h)
hist(data.ns.ksum)
hist(data.ns$ksum)
i
for(i in 1:length(data.sm$birth.weight)){
data.ns$ksum <- kernel.epa((data.ns$birth.weight[i] - ps3k.sm) / h)
}
hist(data.ns$ksum)
max(data.ns$ksum)
min(data.ns$ksum)
h
which(data.ns$birth.weight == 3000)
plot(data.ns$ksum)
kernel.epa(0.3)
ps3k.sm
for(i in 1:length(data.sm$birth.weight)){
data.ns$ksum <- data.ns$weight[i] * kernel.epa((data.ns$birth.weight[i] - 3000) / h)
}
plot(data.ns$ksum)
kernel.epa((3020 - 3000)/40)
for(i in 1:length(data.sm$birth.weight)){
data.ns$ksum <- kernel.epa((data.ns$birth.weight[i] - 3000) / h)
}
plot(data.ns$ksum)
max(data.ns$ksum)
for(i in 1:length(data.sm$birth.weight)){
data.sm$ksum <- kernel.epa((data.sm$birth.weight[i] - 3000) / h)
}
plot(data.sm$ksum)
h
h <- 100
hist(data.sm$birth.weight)
for(i in 1:length(data.sm$birth.weight)){
data.sm$ksum <- kernel.epa((data.sm$birth.weight[i] - 3000) / h)
}
plot(data.ns$ksum)
max(data.ns$ksum)
test <- seq(2500,3500,1)
test.2 <- kernal.epa(test)
test.2 <- kernel.epa(test)
test.2 <- apply(X=test, fun=kernel.epa)
test.2 <- apply(X=test, fun="kernel.epa")
for(i in 1:length(test)){test.2[i]<-kernel.epa(test[i])}
hist(test.2)
for(i in 1:length(data.sm$birth.weight)){
data.sm$ksum[i] <- kernel.epa((data.sm$birth.weight[i] - 3000) / h)
}
plot(data.ns$ksum)
max(data.ns$ksum)
h
kernel.epa((3050 - 3000)/100)
which(data.ns$birth.weight > 2900 & data.ns$birth.weight < 3100) -> damn
hist(data.ns$birth.weight[damn])
for(i in 1:length(data.sm$birth.weight)){
data.sm$ksum[i] <- ((data.sm$birth.weight[i] - 3000) / h)
}
hist(data.sm$ksum)
for(i in 1:length(data.sm$birth.weight)){
data.sm$ksum[i] <- kernel.epa((data.sm$birth.weight[i] - 3000) / h)
}
hist(data.sm$ksum)
for(i in 1:length(data.sm$birth.weight)){
data.sm$ksum[i] <- data.sm$weight[i] * kernel.epa((data.sm$birth.weight[i] - 3000) / h)
}
hist(data.sm$ksum)
kernel.3000.sm <- sum(data.ns$ksum) / (sum(data.ns$weight) * length(data.ns$ksum) * h)
sum(data.sm$ksum)
kernel.3000.sm <- sum(data.sm$ksum) / (sum(data.sm$weight) * length(data.sm$ksum) * h)
h <- 30
# added identity function to kernel (cuts off outside bw)
kernel.epa <- function(u){
if(abs(u)<1){return(0.75*(1-u*u))
}else{return(0)}
}
smokelist <- with(ps1.data.clean, (which(tobacco.rescale == 1)))
nonsmokelist <- with(ps1.data.clean, (which(tobacco.rescale == 0)))
data.sm <- with(ps1.data.clean[smokelist,], data.frame(birth.weight = dbrwt, weight = 1/propensityreduced))
data.ns <- with(ps1.data.clean[nonsmokelist,], data.frame(birth.weight = dbrwt, weight = 1/(1-propensityreduced)))
ps3k.sm <- with(ps1.data.clean, mean(propensityreduced[which(dbrwt == 3000 & tobacco.rescale == 1)]))
ps3k.ns <- with(ps1.data.clean, mean(propensityreduced[which(dbrwt == 3000 & tobacco.rescale == 0)]))
# find smoking at 3000
for(i in 1:length(data.sm$birth.weight)){
data.sm$ksum[i] <- data.sm$weight[i] * kernel.epa((data.sm$birth.weight[i] - 3000) / h)
}
kernel.3000.sm <- sum(data.sm$ksum) / (sum(data.sm$weight) * length(data.sm$ksum) * h)
length(data.sm$ksum)
h
sum(data.ns$ksum)
sum(data.nsm$ksum)
sum(data.sm$ksum)
kernel.3000.sm <- sum(data.sm$ksum) / (length(data.sm$ksum) * h)
kernel.3000.sm <- sum(data.sm$ksum) / (sum(data.sm$weight) * length(data.sm$ksum) * h)
hist(data.sm$weight)
reasonable.weight <- which(data.sm$weight < 10)
kernel.3000.sm <- sum(data.sm$ksum) / (sum(data.sm$weight[reasonable.weight]) * length(data.sm$ksum) * h)
reasonable.weight <- which(data.sm$weight < 5)
# sum contributions and divide by number of obs.,
kernel.3000.sm <- sum(data.sm$ksum) / (sum(data.sm$weight[reasonable.weight]) * length(data.sm$ksum) * h)
# sum contributions and divide by number of obs.,
kernel.3000.sm <- sum(data.sm$ksum) / (sum(data.sm$weight[reasonable.weight]) * length(data.sm$ksum) * h)
